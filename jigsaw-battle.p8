pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--jigsaw battle

function _init()
	scene="menu"
	p1color = 2
	p2color = 3
end

function _update()
	if (scene=="menu") then
		menu_update()
	elseif (scene=="game") then
		game_update()
	elseif (scene=="end") then
		end_update()
	end
end

function _draw()
	if (scene=="menu") then
		menu_draw()
	elseif (scene=="game") then
		game_draw()
	elseif (scene=="end") then
		end_draw()
	end
end
-->8
--jigsaw
-- -1 = socket
-- 0 = straight
-- 1 = knob
function create_random_jigsaw()
	return {
		top = weighted_random_jigsaw(),
		left = weighted_random_jigsaw(),
		right = weighted_random_jigsaw(),
		bottom = weighted_random_jigsaw(),
	}
end


function weighted_random_jigsaw()
    local r = rnd(27) -- 0 <= r < 10
    if r < 13 then
        return -1
    elseif r < 26 then
        return 1
    else
        return 0 -- 1/27 chance of straight
    end
end

function create_start_piece()
	return {
		top = 1,
		left = 1,
		right = 1,
		bottom = 1,
	}
end

--exact true for giving exact pixel coordinates, false or omitted for placing with grid coordinates
function render_jigsaw_at(jigsaw, x, y, exact)
			exact = exact or false
			local sx = grid_x_start + x*cell_size
			local sy = grid_y_start + y*cell_size
			if (exact) then
				sx = x
				sy = y
			end
			
			-- draw with all sockets
			sspr(0, 0, 16, 16, sx, sy)
			
			local edge_sprites = {
			 top = {
			   knob = {16, 0, 8, 8},
			   straight = {24, 0, 8, 8}
			 },
			 bottom = {
			   knob = {16, 8, 8, 8},
			   straight = {24, 8, 8, 8}
			 },
			 left = {
			   knob = {32, 0, 8, 8},
			   straight = {40, 0, 8, 8}
			 },
			 right = {
			   knob = {32, 8, 8, 8},
			   straight = {40, 8, 8, 8}
			 }
			}
			
			local function draw_edge(edge, offset_x, offset_y)
				if jigsaw[edge] != -1 then
					local typ = jigsaw[edge] == 1 and "knob" or "straight"
					local e = edge_sprites[edge][typ]
					-- render the socket/knob
					-- with offset onto the 
					-- existing base
					sspr(e[1], e[2], e[3], e[4], sx + offset_x, sy + offset_y)
				end
			end
			
			draw_edge("top", 5, -4)
			draw_edge("bottom", 5, 13)
			draw_edge("left", -4, 4)
			draw_edge("right", 13, 4)
end
	
-->8
--grid
grid = {}
grid_width = 4
grid_height = 4

cell_size = 16
grid_x_start = 28
grid_y_start = 12

function create_grid()
	for y=0,grid_height do
		grid[y] = {}
		for x=0,grid_width do
			grid[y][x] = nil
		end
	end
	grid[2][2] = create_start_piece()
end

function draw_grid()
	for y=0,grid_height do
		for x=0,grid_width do
			local sx = grid_x_start + x*cell_size
			local sy = grid_y_start + y*cell_size
			rect(sx, sy, sx+cell_size, sy+cell_size, 5)

			if (grid[y][x] != nil) then
				render_jigsaw_at(grid[y][x], x, y)
			end
		end
	end
end			

-- returns true on success
function place_piece()
	local x = grid_cursor.x
	local y = grid_cursor.y
	local piece = next_piece

	if (not piece) then
		printh("not piece", "error")
		return false
	end
	
	if grid[y][x] then
		printh("grid[y][x]", "error")
	 return false
	end

	local socket_in_knob = false

	if y > 0 and grid[y-1][x] then
		local top = grid[y-1][x]
		if (top.bottom + piece.top > 0) then
			printh("top", "error")
			return false
		elseif (top.bottom != piece.top and top.bottom + piece.top == 0) then
			socket_in_knob = true
		else
			printh(top.bottom..", "..piece.top, "error")
		end
	end

	if y < grid_height and grid[y+1][x] then
		local bottom = grid[y+1][x]
		if (bottom.top + piece.bottom > 0) then
			printh("bottom", "error")
			return false
		elseif (bottom.top != piece.bottom and bottom.top + piece.bottom == 0) then
			socket_in_knob = true
		else
			printh(bottom.top..", "..piece.bottom, "error")
		end
	end

	if x > 0 and grid[y][x-1] then
		local left = grid[y][x-1]
		if (left.right + piece.left > 0) then
			printh("left", "error")
			return false
		elseif (left.right != piece.left and left.right + piece.left == 0) then
			socket_in_knob = true
		else
			printh(left.right..", "..piece.left, "error")
		end
	end

	if x < grid_width and grid[y][x+1] then
		local right = grid[y][x+1]
		if (right.left + piece.right > 0) then
			printh("right", "error")
			return false
		elseif (right.left != piece.right and right.left + piece.right == 0) then
			socket_in_knob = true
		else
			printh(right.left..", "..piece.right, "error")
		end
	end


	if (not socket_in_knob) then
		printh("not socket_in_knob", "error")
		return false
	end

	grid[y][x] = piece
	return true
end
-->8
--scene_menu
function menu_update()
	if btnp(❎) then
		scene = "game"
		game_init()
	end
end

function menu_draw()
	cls()
	printc("jigsaw battle", 20, 8)
	if (flr(time() % 3) < 2) then
		printc("press ❎ to play", 100)
	end
end
-->8
--scene_game
time_to_place = 30
time_to_select = 20
function game_init()
  --set all game state
  create_grid()
  create_row()
  create_new_jigsaws()
  next_piece = nil
  grid_cursor = {
    x = 2,
    y = 2,
  }
  selection_cursor = 0
  round = 0
  p1score = 1
  p2score = 1
  time_last_placed = 30000
  time_last_selected = 30000
  --music(0)
end

function game_update()
	if btnp(⬆️, round) then
		grid_cursor.y = max(0, grid_cursor.y - 1)
		sfx(0, 0, 0)
	end
	if btnp(⬇️, round) then
		grid_cursor.y = min(4, grid_cursor.y + 1)
		sfx(0, 0, 0)
	end
	if btnp(➡️, round) then
	 grid_cursor.x = min(4, grid_cursor.x + 1)
		sfx(0, 0, 0)
	end
	if btnp(⬅️, round) then
	 grid_cursor.x = max(0, grid_cursor.x - 1)
		sfx(0, 0, 0)
	end
	if btnp(❎, round) then
		local success = place_piece()
		if (success) then
			time_last_placed = time()
			next_piece = nil
			if (round == 0) then
				p1score += 1
				if (p1score == 25) then
					--todo delay a little bit
					next_round()
				end
			else
				p2score += 1
				if (p2score == 25) then
					--todo delay a little bit
					end_game()
				end
			end
			sfx(1, 0, 0)
		else
			sfx(2, 0, 0)
		end
	end
	
	if btnp(➡️, 1 - round) then
		selection_cursor = min(2, selection_cursor + 1)
		sfx(0, 0, 0)
	end
	if btnp(⬅️, 1 - round) then
	 selection_cursor = max(0, selection_cursor - 1)
		sfx(0, 0, 0)
	end
	if btnp(❎, 1 - round) then
		if (not next_piece) then
			next_piece = selection_row[selection_cursor]
			create_new_jigsaws()
			time_last_selected = time()
			sfx(1, 0, 0)
		else
			sfx(2, 0, 0)
		end
	end
	check_time_ran_out()
end

function check_time_ran_out()
	local now = time()
	print(tostring(now), 10, 10, 2)
	if not next_piece and now - time_last_selected > time_to_select and now - time_last_placed > time_to_select then
		next_piece = selection_row[selection_cursor]
		create_new_jigsaws()
		time_last_selected = time()
		sfx(1, 0, 0)
	end

	if next_piece and now - time_last_selected > time_to_place then
		if (round == 0) then
		 next_round()
		else
		 end_game()
		end
	end
end

function next_round()
  create_grid()
  create_row()
  create_new_jigsaws()
  next_piece = nil
  time_last_placed = 30000
  time_last_selected = 30000
  round += 1
end

function game_draw()
	cls()
	draw_next_piece()
	draw_grid()
	draw_row()
	local grid_color = (round == 0) and p1color or p2color
	local select_color = (round == 1) and p1color or p2color
	rect(grid_x_start + grid_cursor.x * 16, grid_y_start + grid_cursor.y * 16, grid_x_start + grid_cursor.x * 16 + 16, grid_y_start + grid_cursor.y * 16 + 16, grid_color)
	rect(row_x_start + selection_cursor * 16 + selection_cursor * row_x_padding, row_y_start, row_x_start + selection_cursor * 16  + selection_cursor * row_x_padding + 16, row_y_start + 16, select_color)

	if (round == 0) then
		printc(tostring(p1score), 1, p1color)
	else
		printc(tostring(p2score), 1, p2color)
	end
	draw_time_left()
end

function draw_time_left()
	local now = time()
	if next_piece and time_last_selected < 30000 then
		local time_left = time_to_place - (now - time_last_selected)
		local grid_color = (round == 0) and p1color or p2color
		print("time: " .. tostring(flr(time_left)), 0, 1, grid_color)
	end

	if not next_piece and time_last_selected < 30000 and time_last_placed < 30000 then
		local time_left = max(time_to_select - (now - time_last_selected), time_to_select - (now - time_last_placed))
		local select_color = (round == 0) and p2color or p1color
		print("time: " .. tostring(flr(time_left)), 0, 1, select_color)
	end
end
-->8
--scene_end
function end_game()
	end_time = time()
	scene = "end"
end

function end_update()
	if btnp(❎) and time() - 5 > end_time then
		scene = "menu"
	end
end


function end_draw()
  cls()
  
  printc("player 1: "..tostring(p1score), 20, p1color)
  printc("player 2: "..tostring(p2score), 30, p2color)
  if (p1score > p2score) then
    printc("player 1 wins!!!!!", 50, p1color)
  elseif (p1score < p2score) then
    printc("player 2 wins!!!!!", 50, p2color)
  else
    printc("it's a draw", 50)
  end

  if time() - 5 > end_time and (flr(time() % 3) < 2) then
  	printc("press ❎ to play again", 100)
  end
end
-->8
--util

--horizontally centered text
function printc(txt, y, c)
	y = y or 50
	c = c or 6
	print(txt, 64 - #txt*2, y, c)
end
-->8
--selection 
row_w = 3

selection_row = {}
row_x_padding = 16
row_x_start = 28
row_y_start = 105

function create_row() 
	for x=0,row_w-1 do
		selection_row[x] = nil
	end
end

function draw_row()
	for x=0,row_w-1 do
		local sx = row_x_start + x*cell_size + x*row_x_padding
		local sy = row_y_start
		rect(sx, sy, sx + cell_size,sy+cell_size,5)
		render_jigsaw_at(selection_row[x], row_x_start + x*cell_size + x*row_x_padding, row_y_start, true)
	end
end

function create_new_jigsaws()
	for x=0,row_w-1 do
		selection_row[x] = create_random_jigsaw()		
	end
end
		


-->8
--next piece hud
function draw_next_piece()
	local x = 4
	local y = grid_y_start + 32
	local color = (round == 0) and p1color or p2color
	rect(x, y, x + 16, y + 16, color)
	if (next_piece) then
		render_jigsaw_at(next_piece, x, y, true)
	end
end
__gfx__
00000000000000000099900000000000000009aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
099999000009999909aaa90000000000000009aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaa90009aaaa909aaa90000000000099999aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaaa999aaaaa909aaa900000000009aaa99aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaaaaaaaaaaa9099a9900000000009aaaaaaa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaaaaaaaaaaa9999a9999999999999aaa99aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
009aaaaaaaaaaa90aaaaaaaaaaaaaaaa099999aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
0009aaaaaaaaa900aaaaaaaaaaaaaaaa000009aa000009aa00000000000000000000000000000000000000000000000000000000000000000000000000000000
0009aaaaaaaaa900aaaaaaaaaaaaaaaaaa900000aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0009aaaaaaaaa900aaaaaaaaaaaaaaaaaa900000aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
009aaaaaaaaaaa90999a999999999999aa999990aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaaaaaaaaaaa9099a990000000000aa99aaa9aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaaaaaaaaaaa909aaa90000000000aaaaaaa9aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaaa999aaaaa909aaa90000000000aa99aaa9aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09aaaa90009aaaa909aaa90000000000aa999990aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09999900000999990099900000000000aa900000aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
22202220222022200000000020202200000000000000000000000000000000222000000000000000000000000000000000000000000000000000000000000000
02000200222020000200000020200200000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000
02000200202022000000000022200200000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000
02000200202020000200000000200200000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000
02002220202022200000000000202220000000000000000000000000000000222000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555555555555555550000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555555555555555550000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000009990000005000000000000000500000000000000050000000000000000000
0000000000000000000000000000500000000000000050000000000000005000009aaa9000005000000000000000500000000000000050000000000000000000
0000000000000000000000000000500000000000000050000000000000005000009aaa9000005000000000000000500000000000000050000000000000000000
0000000000000000000000000000500000000000000050000000000000005000009aaa9000005000000000000000500000000000000050000000000000000000
00002222222222222222200000005555555555555555222222222222222225555599a99555555555555555555555555555555555555550000000000000000000
00002999990000099999200000005000000000000000200000000000000029999999a99999995999990000099999500000000000000050000000000000000000
000029aaaa90009aaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaa90009aaaa9500000000000000050000000000000000000
000029aaaaa999aaaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaa999aaaaa9500000000000000050000000000000000000
000029aaaaaaaaaaaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaaaaaaaaaa9500000000000000050000000000000000000
000029aaaaaaaaaaaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaaaaaaaaaa9500000000000000050000000000000000000
099999aaaaaaaaaaaaa9999900005000000000000000200000000000099929aaaaaaaaaaaaa9599aaaaaaaaaaa90500000000000000050000000000000000000
9aaa99aaaaaaaaaaaaa99aaa900050000000000000002000000000009aaa29aaaaaaaaaaaaa95aa9aaaaaaaaa900500000000000000050000000000000000000
9aaaaaaaaaaaaaaaaaaaaaaa900050000000000000002000000000009aaa2aaaaaaaaaaaaaaa5aa9aaaaaaaaa900500000000000000050000000000000000000
9aaa99aaaaaaaaaaaaa99aaa900050000000000000002000000000009aaa29aaaaaaaaaaaaa95aa9aaaaaaaaa900500000000000000050000000000000000000
099999aaaaaaaaaaaaa9999900005000000000000000200000000000099929aaaaaaaaaaaaa9599aaaaaaaaaaa90500000000000000050000000000000000000
000029aaaaaaaaaaaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaaaaaaaaaa9500000000000000050000000000000000000
000029aaaaaaaaaaaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaaaaaaaaaa9500000000000000050000000000000000000
000029aaaaa999aaaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaaaaaaaaaa9500000000000000050000000000000000000
000029aaaa90009aaaa9200000005000000000000000200000000000000029aaaaaaaaaaaaa959aaaaaaaaaaaaa9500000000000000050000000000000000000
00002999990000099999200000005000000000000000200000000000000029999999a999999959999999a9999999500000000000000050000000000000000000
00002222222222222222200000005555555555555555222222222222222225555555555555555555555555555555555555555555555550000000000000000000
0000000000000000000000000000500000000000000050000000000000005999999aaa9999995000009aaa900000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaa9aaa9aaaa95000009aaa900000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaa999aaaaa95000009aaa900000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaaaaaaaaaa95000000999000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaaaaaaaaaa95000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000099999aaaaaaaaaaaaa95999000000000000500000000000000050000000000000000000
000000000000000000000000000050000000000000005000000000009aaa99aaaaaaaaaaaaa95aaa900000000000500000000000000050000000000000000000
000000000000000000000000000050000000000000005000000000009aaaaaaaaaaaaaaaaaaa5aaa900000000000500000000000000050000000000000000000
000000000000000000000000000050000000000000005000000000009aaa99aaaaaaaaaaaaa95aaa900000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000099999aaaaaaaaaaaaa95999000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaaaaaaaaaa95000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaaaaaaaaaa95000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaaaaaaaaaa95000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059aaaaaaaaaaaaa95000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000059999999a99999995000000000000000500000000000000050000000000000000000
00000000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555555555555555550000000000000000000
0000000000000000000000000000500000000000000050000000000000005000009aaa9000005000000000000000500000000000000050000000000000000000
0000000000000000000000000000500000000000000050000000000000005000009aaa9000005000000000000000500000000000000050000000000000000000
0000000000000000000000000000500000000000000050000000000000005000009aaa9000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000009990000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005000000000000000500000000000000050000000000000005000000000000000500000000000000050000000000000000000
00000000000000000000000000005555555555555555555555555555555555555555555555555555555555555555555555555555555550000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000009990000000000000000000000000000099900000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000009aaa90000000000000000000000000009aaa90000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000009aaa90000000000000000000000000009aaa90000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000009aaa90000000000000000000000000009aaa90000000000000000000000000
00000000000000000000000000003333333333333333300000000000000055555599a9955555500000000000000055555599a995555550000000000000000000
00000000000000000000000000003999990000099999300000000000000059999999a9999999500000000000000059999999a999999950000000000000000000
000000000000000000000000000039aaaa90009aaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaaaaaaaaaa950000000000000000000
000000000000000000000000000039aaaaa999aaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaaaaaaaaaa950000000000000000000
000000000000000000000000000039aaaaaaaaaaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaaaaaaaaaa950000000000000000000
000000000000000000000000000039aaaaaaaaaaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaaaaaaaaaa950000000000000000000
000000000000000000000000099939aaaaaaaaaaaa90300000000000099999aaaaaaaaaaaaa9999900000000099999aaaaaaaaaaaa9050000000000000000000
0000000000000000000000009aaa39aaaaaaaaaaa9003000000000009aaa99aaaaaaaaaaaaa99aaa900000009aaa99aaaaaaaaaaa90050000000000000000000
0000000000000000000000009aaa3aaaaaaaaaaaa9003000000000009aaaaaaaaaaaaaaaaaaaaaaa900000009aaaaaaaaaaaaaaaa90050000000000000000000
0000000000000000000000009aaa39aaaaaaaaaaa9003000000000009aaa99aaaaaaaaaaaaa99aaa900000009aaa99aaaaaaaaaaa90050000000000000000000
000000000000000000000000099939aaaaaaaaaaaa90300000000000099999aaaaaaaaaaaaa9999900000000099999aaaaaaaaaaaa9050000000000000000000
000000000000000000000000000039aaaaaaaaaaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaaaaaaaaaa950000000000000000000
000000000000000000000000000039aaaaaaaaaaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaaaaaaaaaa950000000000000000000
000000000000000000000000000039aaaaaaaaaaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaaa999aaaaa950000000000000000000
000000000000000000000000000039aaaaaaaaaaaaa9300000000000000059aaaaaaaaaaaaa9500000000000000059aaaa90009aaaa950000000000000000000
000000000000000000000000000039999999a9999999300000000000000059999999a99999995000000000000000599999000009999950000000000000000000
00000000000000000000000000003333333333333333300000000000000055555599a99555555000000000000000555555555555555550000000000000000000
00000000000000000000000000000000009aaa90000000000000000000000000009aaa9000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000009aaa90000000000000000000000000009aaa9000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000009aaa90000000000000000000000000009aaa9000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000999000000000000000000000000000009990000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__sfx__
0001000003010070100c01010010150101c0101f010000000000000000000000000000000000000000000000000000000000000000000000000000000002d0000000000000000000000000000000000000000000
0003000027620266202562025620206201b620156200e620076202e4002a4002840023400154000d4000140000400006000060000600006000000000000000000000000000000000000000000000000000000000
00010000240502005018050130500c050060500005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010f0000190541b0541e0541f0541f0541e0541d0541c0541b0541a0541a0541a0541a0541c05420054220542205422054210541e0541a0541a0541a0541a0541c0541f054210542205422054200541f0541e054
010f00000805508055080550805508055080550805508055080550805508055070550705507055070550705507055070550705508055080550805507055080550805508055080550805508055080550805509055
010f0000347503575035750357523475232750307522e7522e7502e7512f750317503375034752347503275230750317503475036750367513675035750337523175031752317503475237750377503675135751
010f00003b750397523675034750327503275232750327513475035752357503375031752307503075032752337503575134750317512e7502c7512b7512a7502b7502d7522f750327523475037750397523a751
__music__
01 03040546
02 03040644

